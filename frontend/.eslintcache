[{"/home/peter/projects/url-shortener/frontend/src/index.js":"1","/home/peter/projects/url-shortener/frontend/src/reportWebVitals.js":"2","/home/peter/projects/url-shortener/frontend/src/App.js":"3","/home/peter/projects/url-shortener/frontend/src/auth/protectedRoute.js":"4","/home/peter/projects/url-shortener/frontend/src/components/MainPage.js":"5","/home/peter/projects/url-shortener/frontend/src/components/Loading.js":"6","/home/peter/projects/url-shortener/frontend/src/auth/auth0ProviderWithHistory.js":"7","/home/peter/projects/url-shortener/frontend/src/components/LoginButton.js":"8","/home/peter/projects/url-shortener/frontend/src/components/LogoutButton.js":"9","/home/peter/projects/url-shortener/frontend/src/components/AnalyticsPage.js":"10","/home/peter/projects/url-shortener/frontend/src/components/SettingsPage.js":"11","/home/peter/projects/url-shortener/frontend/src/components/Pagination.js":"12","/home/peter/projects/url-shortener/frontend/src/components/LinkTableRow.js":"13"},{"size":697,"mtime":1612677831628,"results":"14","hashOfConfig":"15"},{"size":364,"mtime":1612633837767,"results":"16","hashOfConfig":"15"},{"size":701,"mtime":1612767558256,"results":"17","hashOfConfig":"15"},{"size":398,"mtime":1612677439444,"results":"18","hashOfConfig":"15"},{"size":14930,"mtime":1612918958216,"results":"19","hashOfConfig":"15"},{"size":478,"mtime":1612802503778,"results":"20","hashOfConfig":"15"},{"size":785,"mtime":1612677418043,"results":"21","hashOfConfig":"15"},{"size":443,"mtime":1612767088191,"results":"22","hashOfConfig":"15"},{"size":425,"mtime":1612767079619,"results":"23","hashOfConfig":"15"},{"size":9392,"mtime":1612919532110,"results":"24","hashOfConfig":"15"},{"size":9558,"mtime":1612912987556,"results":"25","hashOfConfig":"15"},{"size":1642,"mtime":1612770303596,"results":"26","hashOfConfig":"15"},{"size":5765,"mtime":1612920702860,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"mf31um",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/peter/projects/url-shortener/frontend/src/index.js",[],["58","59"],"/home/peter/projects/url-shortener/frontend/src/reportWebVitals.js",[],"/home/peter/projects/url-shortener/frontend/src/App.js",["60","61"],"import React from 'react';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ProtectedRoute from './auth/protectedRoute';\nimport Loading from './components/Loading';\nimport MainPage from './components/MainPage';\nimport AnalyticsPage from './components/AnalyticsPage';\nimport SettingsPage from './components/SettingsPage';\n\nfunction App() {\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={MainPage}></Route>\n      <ProtectedRoute exact path=\"/analytics\" component={AnalyticsPage}></ProtectedRoute>\n      <ProtectedRoute exact path=\"/settings\" component={SettingsPage}></ProtectedRoute>\n    </Switch>\n  );\n}\n\nexport default App;\n","/home/peter/projects/url-shortener/frontend/src/auth/protectedRoute.js",[],"/home/peter/projects/url-shortener/frontend/src/components/MainPage.js",["62","63","64"],"/home/peter/projects/url-shortener/frontend/src/components/Loading.js",[],"/home/peter/projects/url-shortener/frontend/src/auth/auth0ProviderWithHistory.js",[],"/home/peter/projects/url-shortener/frontend/src/components/LoginButton.js",[],"/home/peter/projects/url-shortener/frontend/src/components/LogoutButton.js",[],"/home/peter/projects/url-shortener/frontend/src/components/AnalyticsPage.js",["65","66","67","68"],"/home/peter/projects/url-shortener/frontend/src/components/SettingsPage.js",["69","70"],"import React, { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Loading from './Loading';\nimport LoginButton from './LoginButton';\nimport LogoutButton from './LogoutButton';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n// Fa icon for loading spinner\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport Tippy from '@tippyjs/react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\nexport default function SettingsPage() {\n\n    const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n    const [apiKey, setApiKey] = useState(\"\");\n    const [generating, setGenerating] = useState(false);\n    const [copied, setCopied] = useState(false);\n\n    // Get user API_KEY\n    useEffect(() => {\n        (async () => {\n            const token = await getAccessTokenSilently();\n\n            // Request list of user links from server\n            axios.get(process.env.REACT_APP_API_URL + '/api/v1/user/api_key', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            .then((response) => {\n                console.log(response)\n                setApiKey(response.data.api_key)\n            })\n            .then((error) => {\n                console.log(error);\n            })\n        })();\n    }, [user]);\n\n    const generateApiKey = async () => {\n        setGenerating(true);\n\n        // Check if user is authenticated\n        if(isAuthenticated && user) {\n            // Make API call using auth0 api key\n            const token = await getAccessTokenSilently();\n\n            axios.post(process.env.REACT_APP_API_URL + '/api/v1/user/api_key', {}, {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            .then((response) => {\n                console.log(response);\n                setApiKey(response.data.api_key);\n                setGenerating(false);\n            })\n            .catch((error) => {\n                console.log(error);\n                setGenerating(false);\n            })\n        }\n    }\n\n    const history = useHistory();\n\n    const setCopyState = () => {\n        setCopied(true);\n        setTimeout(\n            () => setCopied(false),\n            2000\n        );\n    }\n\n    return (\n        <div class=\"bg-indigo-200\">\n            <div class=\"container flex flex-col h-screen overflow-y-hidden mx-auto space-y-40\">\n                <div class=\"flex flex-col flex-1 h-full\">\n                    <header class=\"flex-shrink-0 border-b\">\n                        <div class=\"flex items-center justify-between p-2 w-full\">\n                            <div class=\"flex items-center space-x-3\">\n                                <span onClick={() => history.push('/')} class=\"cursor-pointer p-2 text-xl font-semibold tracking-wider uppercase\">Urlmin</span>\n                            </div>\n                            { !isAuthenticated &&\n                                <LoginButton></LoginButton>\n                            }\n                            { isAuthenticated &&\n                                <div class=\"flex flex-row items-center justify-center\">\n                                    <button className=\"text-indigo-600 background-transparent font-bold px-4 py-2 outline-none hover:text-white focus:outline-none\" \n                                            type=\"button\" \n                                            style={{ transition: \"all .15s ease\" }}\n                                            onClick={() => history.push('/')}\n                                    >\n                                        Home\n                                    </button>\n                                    <button className=\"text-indigo-600 background-transparent font-bold px-4 py-2 outline-none hover:text-white focus:outline-none\" \n                                            type=\"button\" \n                                            style={{ transition: \"all .15s ease\" }}\n                                            onClick={() => history.push('/analytics')}\n                                    >\n                                        Analytics\n                                    </button>\n                                    <button className=\"text-white background-transparent font-bold px-4 py-2 mr-2 outline-none hover:text-white focus:outline-none\" \n                                            type=\"button\" \n                                            style={{ transition: \"all .15s ease\" }}\n                                            onClick={() => history.push('/settings')}\n                                            disabled\n                                    >\n                                        Settings\n                                    </button>\n                                    <LogoutButton></LogoutButton>\n                                </div>\n                            }\n                        </div>\n                    </header>\n                </div>\n                <div class=\"flex flex-col items-center h-screen justify-start space-y-40\">\n                <div class=\"flex flex-col items-center justify-center w-full mx-0 my-10\">\n                        <div class=\"shadow-xl p-12 bg-white max-w-3xl rounded-lg w-full\">\n                            <div class=\"flex flex-col items-center\">\n                                <h1 class=\"text-2xl font-bold font-black mb-4\">Develop your own tools with your personal api key.</h1>\n                                <div class=\"flex\">\n                                    <input class=\"input border border-gray-400 ppearance-none rounded w-full px-3 py-3 text-2xl focus focus:border-indigo-600 focus:outline-none active:outline-none active:border-indigo-600\" \n                                        id=\"link\" \n                                        type=\"text\" \n                                        placeholder=\"YOUR_DEVELOPER_API_KEY\"\n                                        value={apiKey}\n                                        readOnly\n                                        autoFocus \n                                    />\n                                    { !copied &&\n                                        <CopyToClipboard \n                                            text={apiKey}\n                                        >\n                                            <Tippy content={<span class=\"shadow text-white bg-gray-400 rounded px-1 py-1\">Copy Link</span>}>\n                                                <span \n                                                    class=\"cursor-pointer text-gray-400 px-1 py-3 font-bold hover:text-gray-800 hover:border-black-400 focus:outline-none ml-4\"\n                                                    onClick={setCopyState}\n                                                >   \n                                                    <FontAwesomeIcon icon={faCopy} size='2x'/>\n                                                </span>\n                                            </Tippy>\n                                        </CopyToClipboard>\n                                        }\n                                        { copied &&\n                                        <Tippy content={<span class=\"shadow text-white bg-gray-400 rounded px-1 py-1\">Copied</span>}>\n                                            <span \n                                                class=\"cursor-pointer text-green-400 px-1 py-3 font-bold hover:text-green-400 hover:border-black-400 focus:outline-none ml-4\"\n                                            >  \n                                                <FontAwesomeIcon icon={faCheckCircle} size='2x'/>\n                                            </span>\n                                        </Tippy>\n                                    }\n                                    { !generating &&\n                                    <button\n                                        class=\"bg-indigo-600 font-bold rounded py-3 px-5 mx-3 text-white\"\n                                        onClick={generateApiKey}\n                                    >\n                                        {apiKey ? \"Reset\" : \"Generate\"}\n                                    </button>\n                                    }\n                                    { generating &&\n                                    <button\n                                        class=\"bg-indigo-600 font-bold rounded py-3 px-5 mx-3 text-white\"\n                                        disabled\n                                    >\n                                        <span class=\"text-indigo-900 mx-auto\">\n                                            <FontAwesomeIcon icon={faCircleNotch} size='2x' spin/>\n                                        </span>\n                                    </button>\n                                    }\n                                </div>\n                                <p class=\"my-4\">\n                                    It's simple to use, just include it in the Authorization header when accessing our API.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/home/peter/projects/url-shortener/frontend/src/components/Pagination.js",["71"],"import React from \"react\";\n\nconst Pagination = (props) => {\n  \n    const { offset, setOffset, limit, setLimit, linkCount } = props;\n\n    const paginationText = (linkCount !== 0) ?\n                            (linkCount > offset + limit) ? `${offset + 1} to ${offset + limit} of ${linkCount}` : `${offset + 1} to ${linkCount} of ${linkCount}`\n                            : `0 to 0 of 0`;\n\n    const handlePrevClick = () => {\n        if(offset !== 0) {\n            setOffset(offset - limit);\n        }\n    }\n\n    const handleNextClick = () => {\n        if(offset + limit < linkCount) {\n            setOffset(offset + limit);\n        }\n    }\n\n    return (\n        <div class=\"flex items-center flex-row justify-end p-2 w-full\">\n            <h3 class=\"text-s py-2 px-4 text-gray-800\">{paginationText}</h3>\n            <div class=\"flex flex-row\"> \n                <button \n                    class='bg-indigo-200 text-indigo-600 rounded-r-none border-r-0 border-2 border-indigo-600 font-bold py-2 px-4 rounded hover:bg-indigo-500 hover:border-indigo-900 hover:text-indigo-900 focus:outline-none'\n                    onClick={handlePrevClick}\n                >\n                    Prev\n                </button>\n                <button \n                    class='bg-indigo-200 text-indigo-600 border-2 rounded-l-none border-l-1 border-indigo-600 font-bold py-2 px-4 rounded hover:bg-indigo-500 hover:border-indigo-900 hover:text-indigo-900 focus:outline-none'\n                    onClick={handleNextClick}\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Pagination;","/home/peter/projects/url-shortener/frontend/src/components/LinkTableRow.js",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":15},{"ruleId":"78","severity":1,"message":"84","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":15},{"ruleId":"78","severity":1,"message":"85","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":17},{"ruleId":"78","severity":1,"message":"86","line":27,"column":19,"nodeType":"80","messageId":"81","endLine":27,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":58,"column":8,"nodeType":"89","endLine":58,"endColumn":41,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"82","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":45,"column":8,"nodeType":"89","endLine":45,"endColumn":14,"suggestions":"91"},{"ruleId":"78","severity":1,"message":"86","line":5,"column":39,"nodeType":"80","messageId":"81","endLine":5,"endColumn":47},{"ruleId":"78","severity":1,"message":"83","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"92","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":14},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useAuth0' is defined but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'useEffect' is defined but never used.","'Moment' is defined but never used.","'faTrash' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],"'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [user, limit, offset, updateFlag, getAccessTokenSilently]",{"range":"101","text":"102"},"Update the dependencies array to be: [getAccessTokenSilently, user]",{"range":"103","text":"104"},[1832,1865],"[user, limit, offset, updateFlag, getAccessTokenSilently]",[1562,1568],"[getAccessTokenSilently, user]"]